{
  "properties": [
    {
      "name": "project.cassandra.keyspace.name",
      "type": "java.lang.String",
      "description": "Name of the Cassandra keyspace."
    },
    {
      "name": "project.cassandra.keyspace.replication-factor",
      "type": "java.lang.Integer",
      "defaultValue": 3,
      "description": "Replication factor for a partition in Cassandra."
    },
    {
      "name": "project.cassandra.keyspace.durable-writes",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Durable writes true/false. Whether Cassandra should write to commit log for each write in order not to loose data if the memtable was lost due to outage."
    },
    {
      "name": "project.cassandra.dc",
      "type": "java.lang.String",
      "description": "Datacenter name."
    },
    {
      "name": "project.cassandra.rack",
      "type": "java.lang.String",
      "description": "Rack name in the DC."
    },
    {
      "name": "project.cassandra.seeds",
      "type": "java.lang.String",
      "description": "Initial cassandra seed nodes through which we can discover cluster's topology Comma separated values."
    },
    {
      "name": "project.customEpoch",
      "type": "java.lang.Long",
      "description": "Custom epoch used for snowflakes and bucketing of messages in milliseconds.",
      "defaultValue": "java.util.time.Instant.EPOCH"
    },
    {
      "name": "project.nodeId",
      "type": "java.lang.Integer",
      "description": "Node ID needed for snowflake generation. if set to -1 the ID will be generated. ID generation is prefered in a large node deployment.",
      "defaultValue": -1
    },
    {
      "name": "project.bucketing.bucketSize",
      "type": "java.lang.Long",
      "description": "The size in milliseconds of how to partition the data. For example: if the bucket size is 3 months records will be split into partitions of 3 months each based on the time id."
    }
  ] }
